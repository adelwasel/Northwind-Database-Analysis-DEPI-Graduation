# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NeqIuBYwmiH21f5d4NC83jDgUpX5NKp7

# PYTHON DATA ANALYSIS

## Outline
- Data Analysis Steps

    - NorthWind Analysis

**#  Libraries & Data Importing**

# Import libraries and read in the NorthWind xlsx file
"""

## Import libraries
import numpy as np
import pandas as pd

## Read in the NorthWind xlsx file
df = pd.read_excel('/content/Northwind.python view.xlsx')

"""**#2 Data Understanding (Asking Questions)**"""

#1- read data
df
#2- print head and tail
df.head()
df.tail()
#3- info about data
df.info()
#4- describe data
df.describe()
#5- Check missing values
df.isnull().sum()
#6- if missing values in any column ---> handle
df.dropna()
#7- unique values and value count for each column
df.nunique()
df.value_counts()
#8- shape of data
df.shape
#9- data types
df.dtypes

"""**3] Data Wrangling (Cleaning & Manipulation)**"""

df.isnull().sum()
df.duplicated().sum()

"""**4] Data Analysis & Visualization (EDA & Statistical Analysis)**

1***#Show the list of all customers from 'Germany'?***
"""

import pandas as pd

# Load the data

file_path = 'Northwind.python view.xlsx'
data = pd.read_excel(file_path, sheet_name='Query1')

# Filter for customers from Germany and list unique

customers_germany = data[data['CustomersCountry'] == 'Germany']['CustomerID'].unique()

# Display The results

print(customers_germany)

"""2***#What are the names of the products supplied by 'Exotic Liquid?***


"""

import pandas as pd

# Load the data

file_path = 'Northwind.python view.xlsx'
data = pd.read_excel(file_path, sheet_name='Query1')

# Filter products supplied by 'Exotic Liquid'

products_exotic_liquid = data[data['SupplierName'] == 'Exotic Liquid']['ProductName'].unique()

# Display The results

print(products_exotic_liquid)

"""3***#Which employee has the most orders?***


"""

import pandas as pd

# Load the data

file_path = 'Northwind.python view.xlsx'
data = pd.read_excel(file_path, sheet_name='Query1')

# Count the number of orders per employee

Employee_O_Count = data.groupby('EmployeeID')['OrderID'].nunique()

# Find the employee with the most orders

most_orders_employee = Employee_O_Count.idxmax()
most_orders_count = Employee_O_Count.max()

# Display The results

print(f"Employee ID {most_orders_employee} has the most orders with {most_orders_count} orders.")

"""***4#List all orders placed in the year 1996?***

"""

import pandas as pd

# Load the data

file_path = 'Northwind.python view.xlsx'
data = pd.read_excel(file_path, sheet_name='Query1')

# Convert the 'OrderDate' column to datetime

data['OrderDate'] = pd.to_datetime(data['OrderDate'])

# Filter the data to show only orders from the year 1996

Orders = data[data['OrderDate'].dt.year == 1996]

# Display The results

print(Orders)

"""***5#What is the total revenue generated by each product category?***


"""

import pandas as pd

# Load the data

file_path = 'Northwind.python view.xlsx'
data = pd.read_excel(file_path, sheet_name='Query1')

# Calculate the revenue (Price * Quantity)

data['Revenue'] = data['Price'] * data['Quantity']

# Group the data and sum the 'Revenue'

category_revenue = data.groupby('CategoryName')['Revenue'].sum()

# Display The results

print(category_revenue)

"""***6#Find the top 5 customers who have placed the most orders?***

"""

import pandas as pd

# Load the data

file_path = 'Northwind.python view.xlsx'
data = pd.read_excel(file_path, sheet_name='Query1')

# Count the unique number of orders

customer_order_count = data.groupby('CustomerID')['OrderID'].nunique()

# Get the top 5 customers with the most orders

The_Top_5 = customer_order_count.nlargest(5)

# Display The results

print(The_Top_5)

"""***7#Calculate the average order value for each employee?***

"""

import pandas as pd

# Load the data

file_path = 'Northwind.python view.xlsx'
data = pd.read_excel(file_path, sheet_name='Query1')

# Calculate the revenue  (Price * Quantity)

data['Revenue'] = data['Price'] * data['Quantity']

# Calculate the average order
Avg_Order = data.groupby('EmployeeID')['Revenue'].mean()

# Display The results

print(Avg_Order)

"""***8#Find customers who have ordered products from all categories?***


"""

import pandas as pd

# Load the data

file_path = 'Northwind.python view.xlsx'
data = pd.read_excel(file_path, sheet_name='Query1')

# Get the unique categories

All_category = data['CategoryName'].unique()

# Get the number of unique categories

customer_categories = data.groupby('CustomerID')['CategoryName'].nunique()

# Find customers who have ordered  all categories

All_categories = customer_categories[customer_categories == len(All_category)]

# Display The results

print(All_categories)

"""***9#What pairs of customers ordered the same product in the same order?***

"""

import pandas as pd

# Load the data

file_path = 'Northwind.python view.xlsx'
data = pd.read_excel(file_path, sheet_name='Query1')


# Group by  to find  the same product

customer_p_pair = data.groupby(['OrderID', 'ProductID'])['CustomerID'].apply(list)

# Find the customers

customer_pairs = []

for customers in customer_p_pair:
    if len(customers) > 1:
        pairs = list(combinations(customers, 2))
        customer_pairs.extend(pairs)

# visualization

customerss = pd.DataFrame(customer_pairs, columns=['Customer1', 'Customer2'])

# Display the results

print(customerss)

"""***10#Which orders contain more than 5 different products?***

"""

import pandas as pd

# Load the data

file_path = 'Northwind.python view.xlsx'
data = pd.read_excel(file_path, sheet_name='Query1')

# Group by of unique products

Orders_p_count = data.groupby('OrderID')['ProductID'].nunique()

# Filter orders

Five_products = Orders_p_count[Orders_p_count > 5]

# Display the results

print(Five_products)

"""***11#Which products were not ordered by any customer in France?***

"""

import pandas as pd

# Load the data

file_path = 'Northwind.python view.xlsx'
data = pd.read_excel(file_path, sheet_name='Query1')

# Get products  in France

france_orders = data[data['CustomersCountry'] == 'France']['ProductID'].unique()

# Get all products

all_products = data['ProductID'].unique()

# Products not ordered by French customer

products_not_ordered = [product for product in all_products if product not in france_orders]

# visualization

products_n_ordered = pd.DataFrame(products_not_ordered, columns=['ProductID'])


# Display the results
print(products_n_ordered)